[{"D:\\Festivals\\Festivals - front\\src\\index.js":"1","D:\\Festivals\\Festivals - front\\src\\components\\festival\\Festival.js":"2","D:\\Festivals\\Festivals - front\\src\\services\\auth.js":"3","D:\\Festivals\\Festivals - front\\src\\components\\login\\Login.js":"4","D:\\Festivals\\Festivals - front\\src\\reducers\\index.js":"5","D:\\Festivals\\Festivals - front\\src\\apis\\Axios.js":"6","D:\\Festivals\\Festivals - front\\src\\reducers\\GetPlacesReducers.js":"7","D:\\Festivals\\Festivals - front\\src\\actions\\GetPlaces.js":"8","D:\\Festivals\\Festivals - front\\src\\components\\festival\\CreateFestival.js":"9","D:\\Festivals\\Festivals - front\\src\\components\\reservation\\Reservation.js":"10"},{"size":2233,"mtime":1624545972478,"results":"11","hashOfConfig":"12"},{"size":8192,"mtime":1624620325193,"results":"13","hashOfConfig":"12"},{"size":506,"mtime":1624427768301,"results":"14","hashOfConfig":"12"},{"size":1214,"mtime":1611766870085,"results":"15","hashOfConfig":"12"},{"size":167,"mtime":1624427730571,"results":"16","hashOfConfig":"12"},{"size":571,"mtime":1624426991114,"results":"17","hashOfConfig":"12"},{"size":243,"mtime":1624427627302,"results":"18","hashOfConfig":"12"},{"size":399,"mtime":1624427285942,"results":"19","hashOfConfig":"12"},{"size":4486,"mtime":1624544657246,"results":"20","hashOfConfig":"12"},{"size":3346,"mtime":1624547110179,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"k3ws7g",{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"D:\\Festivals\\Festivals - front\\src\\index.js",[],["45","46"],"D:\\Festivals\\Festivals - front\\src\\components\\festival\\Festival.js",["47","48","49","50","51","52"],"D:\\Festivals\\Festivals - front\\src\\services\\auth.js",[],"D:\\Festivals\\Festivals - front\\src\\components\\login\\Login.js",[],"D:\\Festivals\\Festivals - front\\src\\reducers\\index.js",[],"D:\\Festivals\\Festivals - front\\src\\apis\\Axios.js",[],"D:\\Festivals\\Festivals - front\\src\\reducers\\GetPlacesReducers.js",[],"D:\\Festivals\\Festivals - front\\src\\actions\\GetPlaces.js",[],"D:\\Festivals\\Festivals - front\\src\\components\\festival\\CreateFestival.js",["53"],"import React from 'react';\r\nimport Axios from '../../apis/Axios';\r\nimport { Form, Button, Row, Col, InputGroup } from \"react-bootstrap\";\r\nimport getPlacesAction from \"../../actions/GetPlaces\";\r\nimport { connect } from \"react-redux\";\r\nclass CreateFestival extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let festival = {\r\n            id : -1,\r\n            name: null,\r\n            dateStart : null,\r\n            dateEnd : null,\r\n            ticketPrice : 0,\r\n            availableTickets : 0,\r\n            place : null\r\n        }\r\n\r\n    this.state = {festival: festival, places : []};\r\n}\r\ncreate = this.create.bind(this);\r\n\r\ncomponentDidMount(){\r\n    this.getPlaces();\r\n}\r\ngetPlaces(){\r\n        Axios.get('/places')\r\n        .then(res => {\r\n             // handle success\r\n             console.log(res);\r\n             this.setState({places: res.data});\r\n        })\r\n        .catch(error => {\r\n            // handle error\r\n            console.log(error);\r\n            alert('Problem with getting places');\r\n        });\r\n}\r\nrenderPlacesOptions() {\r\n    return this.state.places.map(place => {\r\n        return (\r\n            <option key={place.id} value={place.id}>\r\n                {place.city} , {place.country}\r\n            </option>\r\n        )\r\n    });\r\n}\r\nplaceSelectionChanged(e){\r\n    // console.log(e);\r\n\r\n    let placeId= e.target.value;\r\n    let place = this.state.places.find((placeDTO) => placeDTO.id == placeId);\r\n    console.log(place);\r\n\r\n    let festival = this.state.festival;\r\n\r\n    festival.place = place;\r\n    \r\n\r\n    this.setState({festival : festival});\r\n            \r\n}\r\n\r\nvalueInputChanged(e){\r\n    let input = e.target;\r\n\r\n    let name = input.name;\r\n\r\n    let value = input.value;\r\n\r\n    console.log(name + \", \" + value);\r\n\r\n    let festival = this.state.festival;\r\n\r\n    festival[name] = value;\r\n\r\n    this.setState({festival : festival});\r\n\r\n}\r\n\r\ncreate(e) {\r\n    let festival = this.state.festival;\r\n    let festivalDTO = {\r\n        name: festival.name,\r\n        dateStart : festival.dateStart,\r\n        dateEnd : festival.dateEnd,\r\n        ticketPrice : festival.ticketPrice,\r\n        availableTickets : festival.availableTickets,\r\n        place : festival.place\r\n\r\n    }\r\n\r\n    Axios.post('/festivals', festivalDTO)\r\n    .then(res => {\r\n        console.log(res);\r\n\r\n        alert('Festival succsessfully created');\r\n        this.props.history.push(\"/festivals\");\r\n    })\r\n\r\n    .catch(error => {\r\n        console.log(error);\r\n\r\n        alert('Error! Problem with creating festival');\r\n    });\r\n\r\n}\r\nrender(){\r\n    return (\r\n        <>\r\n        <Row>\r\n        <Col></Col>\r\n        <Col xs=\"14\" sm=\"12\" md=\"12\">\r\n        <Form>\r\n            <Form.Label htmlFor=\"zname\">Festival name</Form.Label>\r\n            <Form.Control id=\"zname\" name=\"name\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n            <Form.Label htmlFor=\"zDatumP\">Start of the festival</Form.Label>\r\n            <Form.Control type=\"date\" id=\"zDatumP\" name=\"dateStart\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n            <Form.Label id=\"zDatumZ\">End of the festival</Form.Label>\r\n            <Form.Control type=\"date\" id=\"zDatumZ\" name=\"dateEnd\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n            <Form.Label id=\"zTicketPrice\">Ticket price</Form.Label>\r\n            <Form.Control type=\"number\" id=\"zTicketPrice\" name=\"ticketPrice\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n            <Form.Label id=\"zAvailebleTickets\">Available tickets</Form.Label>\r\n            <Form.Control type=\"number\" id=\"zAvailebleTickets\" name=\"availableTickets\" onChange={(e)=>this.valueInputChanged(e)}/> <br/>\r\n\r\n            <Form.Label htmlFor=\"pPlace\">Place of event</Form.Label>\r\n            <InputGroup>\r\n            <Form.Control as=\"select\" id=\"pPlace\" name=\"place\" onChange={(e)=>this.placeSelectionChanged(e)}>\r\n            <option>Choose place</option>\r\n            {this.renderPlacesOptions()}\r\n            </Form.Control>\r\n\r\n            </InputGroup>\r\n           \r\n\r\n       \r\n            <Button style={{ marginTop: \"25px\" }}onClick={(e) => this.create(e)}>Create</Button>\r\n        </Form>\r\n        </Col>\r\n\r\n        \r\n        <Col></Col>\r\n        </Row>\r\n\r\n\r\n      \r\n \r\n    </>\r\n\r\n    \r\n\r\n    )\r\n}\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    return { places: state.places };\r\n  };\r\n  \r\n  export default connect(mapStateToProps, {\r\n    getPlaces: getPlacesAction,\r\n  })(CreateFestival);","D:\\Festivals\\Festivals - front\\src\\components\\reservation\\Reservation.js",["54"],"import React from 'react';\r\nimport Axios from '../../apis/Axios';\r\nimport {Form, Button, Row, Col, InputGroup } from \"react-bootstrap\";\r\nclass Reservation extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let festival = {\r\n            id : -1,\r\n            name: null,\r\n            dateStart : null,\r\n            dateEnd : null,\r\n            ticketPrice : 0,\r\n            availableTickets : 0,\r\n            place : {}\r\n        }\r\n\r\n    this.state = {id : 0, festival : festival, boughtTickets : 0};\r\n}\r\n\r\n    componentDidMount(){\r\n        this.getFestivalById(this.props.match.params.id);\r\n        \r\n     \r\n    }\r\n\r\n    getFestivalById(festivalId) {\r\n        Axios.get('/festivals/' + festivalId)\r\n        .then(res => {\r\n            // handle success\r\n            console.log(res.data);\r\n            let festival = {\r\n                id : res.data.id,\r\n                name: res.data.name,\r\n                dateStart : res.data.dateStart,\r\n                dateEnd : res.data.dateEnd,\r\n                ticketPrice : res.data.ticketPrice,\r\n                availableTickets : res.data.availableTickets,\r\n                place : res.data.place\r\n                \r\n    \r\n    \r\n            }\r\n            this.setState({festival : festival});\r\n            \r\n        })\r\n        .catch(error => {\r\n            // handle error\r\n            console.log(error);\r\n            alert('Error! Could not get festival')\r\n         });\r\n    }\r\n\r\n    create(e){\r\n        \r\n    \r\n        \r\n        let reservationDTO = {\r\n            boughtTickets : this.state.boughtTickets,\r\n            festival : this.state.festival\r\n            \r\n\r\n\r\n        }\r\n\r\n       \r\n        Axios.post('/reservations' , reservationDTO)\r\n        .then(res => {\r\n            console.log(res);\r\n\r\n            alert('Reservation was successfull');\r\n            this.props.history.push('/festivals');\r\n        \r\n        })\r\n\r\n        .catch(error => {\r\n            console.log(error);\r\n\r\n            alert('Error! Reservation was not successfull!');\r\n        });\r\n    }\r\n\r\n    ticketsInputChanged(e) {\r\n        let input = e.target;\r\n    \r\n        let name = input.name;\r\n        let value = input.value;\r\n\r\n        console.log(name + \", \" + value);\r\n    \r\n        let boughtTickets = this.state.boughtTickets;\r\n        boughtTickets = value;\r\n    \r\n        this.setState({ boughtTickets : boughtTickets });\r\n      }\r\n\r\n\r\n      render(){\r\n        return (\r\n            <>\r\n            <Row>\r\n                <h1>Tickets reservation for {this.state.festival.name}</h1>\r\n            <Col></Col>\r\n            <Col xs=\"14\" sm=\"12\" md=\"12\">\r\n            <Form>\r\n              \r\n                <Form.Label id=\"zbrojLjudi\">Number of tickets you want to buy:</Form.Label>\r\n                <Form.Control type=\"number\" id=\"availableTickets\" name=\"availableTickets\" onChange={(e)=>this.ticketsInputChanged(e)}/> <br/>\r\n                \r\n               \r\n    \r\n                <br/>\r\n                \r\n               \r\n         \r\n                <Button style={{ marginTop: \"25px\" }}onClick={(e) => this.create(e)}>Reserve</Button>\r\n            </Form>\r\n            </Col>\r\n    \r\n            \r\n            <Col></Col>\r\n            </Row>\r\n    \r\n    \r\n          \r\n     \r\n        </>\r\n    \r\n        \r\n    \r\n        )\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n}\r\nexport default Reservation;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":42,"column":36,"nodeType":"61","messageId":"62","endLine":42,"endColumn":38},{"ruleId":"59","severity":1,"message":"63","line":143,"column":92,"nodeType":"61","messageId":"62","endLine":143,"endColumn":94},{"ruleId":"59","severity":1,"message":"63","line":215,"column":60,"nodeType":"61","messageId":"62","endLine":215,"endColumn":62},{"ruleId":"64","severity":1,"message":"65","line":215,"column":125,"nodeType":"66","endLine":215,"endColumn":135},{"ruleId":"59","severity":1,"message":"63","line":216,"column":60,"nodeType":"61","messageId":"62","endLine":216,"endColumn":62},{"ruleId":"64","severity":1,"message":"65","line":216,"column":147,"nodeType":"66","endLine":216,"endColumn":157},{"ruleId":"59","severity":1,"message":"63","line":54,"column":66,"nodeType":"61","messageId":"62","endLine":54,"endColumn":68},{"ruleId":"67","severity":1,"message":"68","line":3,"column":33,"nodeType":"69","messageId":"70","endLine":3,"endColumn":43},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'InputGroup' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]